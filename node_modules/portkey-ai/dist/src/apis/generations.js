"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromptCompletions = exports.Prompt = exports.Generations = void 0;
const apiResource_1 = require("../apiResource.js");
const utils_1 = require("../utils.js");
const createHeaders_1 = require("./createHeaders.js");
class Generations extends apiResource_1.ApiResource {
    create(_body, opts) {
        const warning = 'This API has been deprecated. Please use the Prompt API for the saved prompt.';
        console.warn(warning); // eslint-disable-line no-console
        const body = { variables: _body.variables };
        return this.post(`/v1/prompts/${_body.promptID}/generate`, Object.assign({ body }, opts));
    }
}
exports.Generations = Generations;
class Prompt extends apiResource_1.ApiResource {
    constructor() {
        super(...arguments);
        this.completions = new PromptCompletions(this.client);
    }
    render(_body, params, opts) {
        const body = _body;
        const promptId = _body.promptID;
        if (params) {
            this.client.customHeaders = Object.assign(Object.assign({}, this.client.customHeaders), (0, createHeaders_1.createHeaders)(Object.assign({}, params)));
        }
        const response = this.post(`/prompts/${promptId}/render`, Object.assign({ body }, opts));
        return response;
    }
}
exports.Prompt = Prompt;
class PromptCompletions extends apiResource_1.ApiResource {
    create(_body, params, opts) {
        var _a;
        if (params) {
            const config = (0, utils_1.overrideConfig)(this.client.config, params.config);
            this.client.customHeaders = Object.assign(Object.assign({}, this.client.customHeaders), (0, createHeaders_1.createHeaders)(Object.assign(Object.assign({}, params), { config })));
        }
        const promptId = _body.promptID;
        const body = _body;
        const stream = (_a = _body.stream) !== null && _a !== void 0 ? _a : false;
        delete body.promptID;
        body.stream = stream;
        const response = this.post(`/prompts/${promptId}/completions`, Object.assign(Object.assign({ body }, opts), { stream }));
        return response;
    }
}
exports.PromptCompletions = PromptCompletions;
//# sourceMappingURL=generations.js.map